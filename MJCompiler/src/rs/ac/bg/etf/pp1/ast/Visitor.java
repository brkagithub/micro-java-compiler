// generated with ast extension for cup
// version 0.8
// 17/0/2023 20:41:12


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(Unmatched Unmatched);
    public void visit(ExprOptional ExprOptional);
    public void visit(Mulop Mulop);
    public void visit(VarDeclaration VarDeclaration);
    public void visit(NonOptionalActPars NonOptionalActPars);
    public void visit(GlobalVarDeclEnd GlobalVarDeclEnd);
    public void visit(VarDeclListsOptional VarDeclListsOptional);
    public void visit(Matched Matched);
    public void visit(Relop Relop);
    public void visit(ConstDeclComma ConstDeclComma);
    public void visit(TermList TermList);
    public void visit(Assignop Assignop);
    public void visit(FormalParamDecl FormalParamDecl);
    public void visit(MethodDeclaration MethodDeclaration);
    public void visit(StatementList StatementList);
    public void visit(Addop Addop);
    public void visit(List List);
    public void visit(Factor Factor);
    public void visit(CondTerm CondTerm);
    public void visit(Designator Designator);
    public void visit(FormalParsOpt FormalParsOpt);
    public void visit(Term Term);
    public void visit(Condition Condition);
    public void visit(ConstValue ConstValue);
    public void visit(ConstEnd ConstEnd);
    public void visit(ConstDeclList ConstDeclList);
    public void visit(DesignatorOptional DesignatorOptional);
    public void visit(FormalParamComma FormalParamComma);
    public void visit(ConstDeclaration ConstDeclaration);
    public void visit(GlobalVarDeclComma GlobalVarDeclComma);
    public void visit(Label Label);
    public void visit(NewTypeParams NewTypeParams);
    public void visit(VarDeclList VarDeclList);
    public void visit(Expr Expr);
    public void visit(ClassDeclaration ClassDeclaration);
    public void visit(ActPars ActPars);
    public void visit(DesignatorList DesignatorList);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(FormalPars FormalPars);
    public void visit(ConstDeclListNoSemi ConstDeclListNoSemi);
    public void visit(Statement Statement);
    public void visit(DesignatorExprSemi DesignatorExprSemi);
    public void visit(CondFact CondFact);
    public void visit(ExtendsOptional ExtendsOptional);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(ConditionIfParen ConditionIfParen);
    public void visit(GlobalVarDeclList GlobalVarDeclList);
    public void visit(GlobalVarDecls GlobalVarDecls);
    public void visit(VarDeclListNoSemi VarDeclListNoSemi);
    public void visit(Mod Mod);
    public void visit(Div Div);
    public void visit(Mul Mul);
    public void visit(Minus Minus);
    public void visit(Plus Plus);
    public void visit(RelopLT RelopLT);
    public void visit(RelopLTE RelopLTE);
    public void visit(RelopGT RelopGT);
    public void visit(RelopGTE RelopGTE);
    public void visit(RelopNEQ RelopNEQ);
    public void visit(RelopEQ RelopEQ);
    public void visit(AssignopDerived1 AssignopDerived1);
    public void visit(LabelDerived1 LabelDerived1);
    public void visit(Type Type);
    public void visit(FactorExpr FactorExpr);
    public void visit(FactorNewParens FactorNewParens);
    public void visit(FactorNewBrackets FactorNewBrackets);
    public void visit(FactorBool FactorBool);
    public void visit(FactorChar FactorChar);
    public void visit(FactorNum FactorNum);
    public void visit(FactorFun FactorFun);
    public void visit(FactorDesignator FactorDesignator);
    public void visit(TermMul TermMul);
    public void visit(TermSingle TermSingle);
    public void visit(NoActualParams NoActualParams);
    public void visit(ActualParams ActualParams);
    public void visit(ActualParamMultiple ActualParamMultiple);
    public void visit(ActualParamSingle ActualParamSingle);
    public void visit(ExprOptionalEpsilon ExprOptionalEpsilon);
    public void visit(ExprOptionalExpr ExprOptionalExpr);
    public void visit(ExprMinus ExprMinus);
    public void visit(TermListAdd TermListAdd);
    public void visit(TermListSingle TermListSingle);
    public void visit(CondFactRelop CondFactRelop);
    public void visit(CondFactExpr CondFactExpr);
    public void visit(CondTermAnd CondTermAnd);
    public void visit(CondTermSingle CondTermSingle);
    public void visit(ConditionOr ConditionOr);
    public void visit(ConditionSingle ConditionSingle);
    public void visit(ExprPlus ExprPlus);
    public void visit(NoDesignator NoDesignator);
    public void visit(DesignatorMandatory DesignatorMandatory);
    public void visit(DesignatorArrHelper DesignatorArrHelper);
    public void visit(DesignatorArr DesignatorArr);
    public void visit(DesignatorDot DesignatorDot);
    public void visit(DesignatorIdent DesignatorIdent);
    public void visit(MultipleDesignators MultipleDesignators);
    public void visit(NoDesignatorList NoDesignatorList);
    public void visit(SingleDesignator SingleDesignator);
    public void visit(DesignatorAssignError DesignatorAssignError);
    public void visit(DesignatorExprAndSemi DesignatorExprAndSemi);
    public void visit(DesignatorMethodCallHelper DesignatorMethodCallHelper);
    public void visit(DesignatorDeStruct DesignatorDeStruct);
    public void visit(DesignatorDec DesignatorDec);
    public void visit(DesignatorInc DesignatorInc);
    public void visit(DesignatorMethodCall DesignatorMethodCall);
    public void visit(DesignatorAssign DesignatorAssign);
    public void visit(ConditionIfParenError ConditionIfParenError);
    public void visit(ConditionIfParenCorrect ConditionIfParenCorrect);
    public void visit(WhileKeyword WhileKeyword);
    public void visit(ElseHelper ElseHelper);
    public void visit(IfHelper IfHelper);
    public void visit(WhileUnmatched WhileUnmatched);
    public void visit(IfElseUnmatched IfElseUnmatched);
    public void visit(IfUnmatched IfUnmatched);
    public void visit(ForeachStmtHelper ForeachStmtHelper);
    public void visit(ForeachMapHelper ForeachMapHelper);
    public void visit(StatementListBraces StatementListBraces);
    public void visit(Foreach Foreach);
    public void visit(PrintWithNum PrintWithNum);
    public void visit(Print Print);
    public void visit(Read Read);
    public void visit(Return Return);
    public void visit(Continue Continue);
    public void visit(Break Break);
    public void visit(WhileMatched WhileMatched);
    public void visit(IfElseMatched IfElseMatched);
    public void visit(DesignatorSt DesignatorSt);
    public void visit(UnmatchedStatement UnmatchedStatement);
    public void visit(MatchedStatement MatchedStatement);
    public void visit(NoStatements NoStatements);
    public void visit(Statements Statements);
    public void visit(FParamArrDecl FParamArrDecl);
    public void visit(FParamDecl FParamDecl);
    public void visit(FormalParamCommaError FormalParamCommaError);
    public void visit(FormalParamCommaDerived1 FormalParamCommaDerived1);
    public void visit(SingleFormalParError SingleFormalParError);
    public void visit(SingleFormalPar SingleFormalPar);
    public void visit(MultipleFormalPars MultipleFormalPars);
    public void visit(NoFormPars NoFormPars);
    public void visit(FormPars FormPars);
    public void visit(VoidTypeName VoidTypeName);
    public void visit(MethodTypeName MethodTypeName);
    public void visit(MethodVoidDecl MethodVoidDecl);
    public void visit(MethodTypeDecl MethodTypeDecl);
    public void visit(NoMethodDeclList NoMethodDeclList);
    public void visit(MethodDeclarationList MethodDeclarationList);
    public void visit(NoExtends NoExtends);
    public void visit(ExtendsExists ExtendsExists);
    public void visit(ClassName ClassName);
    public void visit(ClassDeclWMethods ClassDeclWMethods);
    public void visit(ClassDecl ClassDecl);
    public void visit(VarArrDecl VarArrDecl);
    public void visit(VarDecl VarDecl);
    public void visit(SingleVarDeclaration SingleVarDeclaration);
    public void visit(MultipleVarDeclarations MultipleVarDeclarations);
    public void visit(NoVarDeclLists NoVarDeclLists);
    public void visit(VarDeclLists VarDeclLists);
    public void visit(VarDeclListDerived1 VarDeclListDerived1);
    public void visit(GlobalVarDeclSemiError GlobalVarDeclSemiError);
    public void visit(GlobalVarDeclSemi GlobalVarDeclSemi);
    public void visit(GlobalVarDeclCommaError GlobalVarDeclCommaError);
    public void visit(GlobalVarDecComma GlobalVarDecComma);
    public void visit(SingleVarGlobalDeclaration SingleVarGlobalDeclaration);
    public void visit(MultipleGlobalVarDeclarations MultipleGlobalVarDeclarations);
    public void visit(GlobalVarDeclListDerived1 GlobalVarDeclListDerived1);
    public void visit(BoolVal BoolVal);
    public void visit(CharVal CharVal);
    public void visit(NumVal NumVal);
    public void visit(ConstDecl ConstDecl);
    public void visit(ConstSemiError ConstSemiError);
    public void visit(ConstDeclSemi ConstDeclSemi);
    public void visit(ConstCommaError ConstCommaError);
    public void visit(ConstDeclCommaDerived1 ConstDeclCommaDerived1);
    public void visit(SingleConstDeclaration SingleConstDeclaration);
    public void visit(MultipleConstDeclarations MultipleConstDeclarations);
    public void visit(ConstDeclListDerived1 ConstDeclListDerived1);
    public void visit(NoList NoList);
    public void visit(ClassList ClassList);
    public void visit(VarList VarList);
    public void visit(ConstList ConstList);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
